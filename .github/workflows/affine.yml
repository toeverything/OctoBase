name: Build AFFiNE

on:
    release:
        types: [created]
    # workflow_dispatch:
    # push:
    #     branches: [master]
    #     paths:
    #         # - 'apps/keck/**'
    #         # - 'libs/**'
    #         - '.github/deployment/Dockerfile-affine'
    #         - '.github/deployment/Dockerfile-affine-prod'
    #         - '.github/workflows/affine.yml'
    # pull_request:
    #     branches: [master]
    #     paths:
    #         # - 'apps/keck/**'
    #         # - 'libs/**'
    #         - '.github/deployment/Dockerfile-affine'
    #         - '.github/deployment/Dockerfile-affine-prod'
    #         - '.github/workflows/affine.yml'

# Cancels all previous workflow runs for pull requests that have not completed.
# See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
    # The concurrency group contains the workflow name and the branch name for
    # pull requests or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

env:
    REGISTRY: ghcr.io
    NAMESPACE: toeverything
    AFFINE_IMAGE_NAME: AFFiNE-self-hosted
    IMAGE_TAG_LATEST: latest
    LOCAL_CACHE: localhost:5000/toeverything/relocate:latest

jobs:
    affine:
        runs-on: self-hosted
        environment: development
        permissions:
            contents: read
            packages: write

        services:
            registry:
                image: registry:2
                ports:
                    - 5000:5000

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.ACTIONS_PACKAGE_PUBLISH }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
              with:
                  driver-opts: network=host

            - name: Build and push Docker image (affine-baseline)
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  file: ./.github/deployment/Dockerfile-affine
                  tags: ${{ env.LOCAL_CACHE }}
                  target: jwst

            # - name: Extract metadata (tags, labels) for Docker (affine-pre-alpha)
            #   id: meta_affine_pre_alpha
            #   uses: docker/metadata-action@v4
            #   with:
            #       images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.AFFINE_IMAGE_NAME }}
            #       tags: pre-alpha

            # - name: Build and push Docker image (affine-pre-alpha)
            #   uses: docker/build-push-action@v3
            #   with:
            #       context: .
            #       platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
            #       file: ./.github/deployment/Dockerfile-affine-prod
            #       push: ${{ github.ref == 'refs/heads/master' && true || false }}
            #       tags: ${{ steps.meta_affine_pre_alpha.outputs.tags }}
            #       labels: ${{ steps.meta_affine_pre_alpha.outputs.labels }}
            #       target: affine
            #       build-args: |
            #           BASE_IMAGE=${{ env.LOCAL_CACHE }}
            #           BASE_STATIC_IMAGE=ghcr.io/toeverything/affine-static:pre-alpha

            # - name: Extract metadata (tags, labels) for Docker (affine-abbey-wood)
            #   id: meta_affine_abbey_wood
            #   uses: docker/metadata-action@v4
            #   with:
            #       images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.AFFINE_IMAGE_NAME }}
            #       tags: |
            #           alpha-abbey-wood
            #           ${{ env.IMAGE_TAG_LATEST }}

            # - name: Build and push Docker image (affine-abbey-wood)
            #   uses: docker/build-push-action@v3
            #   with:
            #       context: .
            #       platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
            #       file: ./.github/deployment/Dockerfile-affine-prod
            #       push: ${{ github.ref == 'refs/heads/master' && true || false }}
            #       tags: ${{ steps.meta_affine_abbey_wood.outputs.tags }}
            #       labels: ${{ steps.meta_affine_abbey_wood.outputs.labels }}
            #       target: affine
            #       build-args: |
            #           BASE_IMAGE=${{ env.LOCAL_CACHE }}
            #           BASE_STATIC_IMAGE=ghcr.io/toeverything/affine-static:abbey-wood

            - name: Extract metadata (tags, labels) for Docker (affine-downhills)
              id: meta_affine_downhills
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.AFFINE_IMAGE_NAME }}
                  tags: |
                      alpha-downhills
                      ${{ env.IMAGE_TAG_LATEST }}

            - name: Build and push Docker image (affine-downhills)
              uses: docker/build-push-action@v3
              with:
                  context: .
                  platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
                  file: ./.github/deployment/Dockerfile-affine-prod
                  push: ${{ github.ref == 'refs/heads/master' && true || false }}
                  tags: ${{ steps.meta_affine_downhills.outputs.tags }}
                  labels: ${{ steps.meta_affine_downhills.outputs.labels }}
                  target: affine
                  build-args: |
                      BASE_IMAGE=${{ env.LOCAL_CACHE }}
                      BASE_STATIC_IMAGE=ghcr.io/toeverything/affine-static:downhills
